import {Bot, webhookCallback, Context} from 'grammy';
import type {ITelegramService, TelegramCommandHandler} from './telegramService';
import {TelegramCommand} from './telegramService';

export class TelegramAdapter implements ITelegramService {
    private readonly bot: Bot;

    constructor(token: string) {
        this.bot = new Bot(token);
        console.log('ü§ñ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    async sendMessage(chatId: number | string, msg: string): Promise<void> {
        await this.bot.api.sendMessage(chatId, msg);
    }

    command(command: TelegramCommand, handler: TelegramCommandHandler) {
        this.bot.command(command, async (ctx: Context) => {
            try {
                await handler(ctx);
            } catch (e) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /${TelegramCommand.Start}:`, e.message);
                await ctx.reply('–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
        });
    }

    public getWebhookMiddleware() {
        return webhookCallback(this.bot, 'express');
    }

    async start(): Promise<void> {
        await this.bot.start();
        console.log('üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling');
    }
}
